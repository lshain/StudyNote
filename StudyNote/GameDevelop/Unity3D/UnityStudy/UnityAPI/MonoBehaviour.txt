Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-06-02T10:57:47+08:00

====== MonoBehaviour ======
Created 星期四 02 六月 2016

===== Unity3d OnApplicationPause与OnApplicationFocus =====

在手机游戏当中，会碰到“强制暂停”,如:锁屏、接电话或短信之类的。如果“强制暂停”时间过长，网络游戏有时得重新登录等事件。
而Unity3d，Android Plugins中的UnityPlayer.UnitySendMessage,经测试在强制暂停时，OnPause、OnStop周期中UnitySendMessage无效。

重点探索OnApplicationPause和OnApplicationFocus；

OnApplicationPause，当程序暂停；
OnApplicationFocus，当程序获得或失去焦点；

经测试：
强制暂停时，先 OnApplicationPause，后 OnApplicationFocus；
重新“启动”手机时，先OnApplicationFocus，后 OnApplicationPause；

思路：
1，定义两个bool
isPause=false;
isFocus=false;

在OnEnable();初始化：

void OnEnable(){
	isPause=false;
	isFocus=false;
}

void OnApplicationPause(){
#if UNITY_IPHONE || UNITY_ANDROID
	Debug.Log("OnApplicationPause  "+isPause+"  "+isFocus);
	if(!isPause)
	{
		// 强制暂停时，事件
		pauseTime();
	}
	else 
	{
		isFocus=true;
	}
	
	isPause=true;
#endif
}

void OnApplicationFocus(){
#if UNITY_IPHONE || UNITY_ANDROID
	Debug.Log("OnApplicationFocus  "+isPause+"  "+isFocus);
	if(isFocus)
	{
		// “启动”手机时，事件
		resumeList();
		isPause=false;
		isFocus=false;
	}
	
	if(isPause)
	{
		isFocus=true;
	}
#endif
}

===== Unity3D游戏对象消失enabled、Destroy与active的区别 =====
Unity3D游戏对象消失三种方法的区别：

gameObject.active：是否在场景中停用该物体，在你gameObject.active =false中，则你在场景中用find找不到该物体。如果该物体有子物体，你要用SetActiveRecursively(false) 来控制是否在场景中停用该物体。

GameObject.Destroy()：表示移除物体或物体上的组件，代表销毁该物体，实际上该物体的内存并没有立即释放，而是在你下下个场景中槽释放内存资源，就是你a场景中Destroy了 一般是在c场景中才真正释放该物体的内存资源。

gameObject.renderer.enabled：是控制一个物体是否在屏幕上渲染或显示，而物体实际还是存在，只是相当于隐身，而物体本身的碰撞体还依然存在的。

