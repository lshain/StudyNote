Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-07-30T22:47:29+08:00

====== Gradle命令详解 ======
Created 星期六 30 七月 2016

转自：https://segmentfault.com/a/1190000002464822

下面以9GAG为例来讲解下命令行Gradle编译的过程。

=== 1、切换到9GAG项目的根目录，执行 ./gradlew -v 来查看下项目所用的Gradle版本 ===
如果你是第一次执行会去下载Gradle，这个过程如果不翻墙非常慢，建议翻墙
{{./1.jpg}}

紧接着下载成功会看到如下信息：
------------------------------------------------------------
Gradle 2.2.1
------------------------------------------------------------

Build time:   2014-11-24 09:45:35 UTC
Build number: none
Revision:     6fcb59c06f43a4e6b1bcb401f7686a8601a1fb4a

Groovy:       2.3.6
Ant:          Apache Ant(TM) version 1.9.3 compiled on December 23 2013
JVM:          1.7.0_60 (Oracle Corporation 24.60-b09)
OS:           Mac OS X 10.9.5 x86_64

=== 2、接着执行 ./gradlew clean ===
执行这个命令会去下载Gradle的一些依赖，下载成功并编译通过时会看到如下信息：
:app:clean UP-TO-DATE
:extras:ShimmerAndroid:clean UP-TO-DATE

BUILD SUCCESSFUL

=== 3、最后执行 ./gradlew build ===
这个命令会直接编译并生成相应的apk文件，如果看到如下字样就代表build成功了
BUILD SUCCESSFUL

Total time: 31.456 secs

紧接着在 9GAG/app/build/outputs/apk 目录下会看到类似于app-debug-unaligned.apk, app-release-unsigned.apk等，看名字应该能理解意思，unaligned代表没有进行zip优化的，unsigned代表没有签名的。然后就可以直接安装apk查看运行效果了。

===== Gradle常用命令 =====
上面大家接触了一些命令如 ./gradlew -v ./gradlew clean ./gradlew build, 这里注意是./gradlew, ./代表当前目录，gradlew代表 gradle wrapper，意思是gradle的一层包装，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper， 在9GAG/gradle/wrapper/gralde-wrapper.properties文件中声明了它指向的目录和版本。只要下载成功即可用grdlew wrapper的命令代替全局的gradle命令。

理解了gradle wrapper的概念，下面一些常用命令也就容易理解了。
	./gradlew -v 版本号
	./gradlew clean 清除9GAG/app目录下的build文件夹
	./gradlew build 检查依赖并编译打包

这里注意的是 ./gradlew build 命令把debug、release环境的包都打出来，如果正式发布只需要打Release的包，该怎么办呢，下面介绍一个很有用的命令 assemble, 如
	./gradlew assembleDebug 编译并打Debug包
	./gradlew assembleRelease 编译并打Release的包

除此之外，assemble还可以和productFlavors结合使用，具体在下一篇多渠道打包进一步解释。
	./gradlew installRelease Release模式打包并安装
	./gradlew uninstallRelease 卸载Release模式包


